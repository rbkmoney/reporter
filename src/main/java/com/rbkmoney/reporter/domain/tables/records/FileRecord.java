/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.reporter.domain.tables.records;


import com.rbkmoney.reporter.domain.tables.File;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileRecord extends UpdatableRecordImpl<FileRecord> implements Record6<String, Long, String, String, String, String> {

    private static final long serialVersionUID = -228486696;

    /**
     * Setter for <code>rpt.file.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>rpt.file.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>rpt.file.report_id</code>.
     */
    public void setReportId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>rpt.file.report_id</code>.
     */
    public Long getReportId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>rpt.file.bucket_id</code>.
     */
    public void setBucketId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rpt.file.bucket_id</code>.
     */
    public String getBucketId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rpt.file.filename</code>.
     */
    public void setFilename(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rpt.file.filename</code>.
     */
    public String getFilename() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rpt.file.md5</code>.
     */
    public void setMd5(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rpt.file.md5</code>.
     */
    public String getMd5() {
        return (String) get(4);
    }

    /**
     * Setter for <code>rpt.file.sha256</code>.
     */
    public void setSha256(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>rpt.file.sha256</code>.
     */
    public String getSha256() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Long, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Long, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return File.FILE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return File.FILE.REPORT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return File.FILE.BUCKET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return File.FILE.FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return File.FILE.MD5;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return File.FILE.SHA256;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getReportId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBucketId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getMd5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSha256();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileRecord value2(Long value) {
        setReportId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileRecord value3(String value) {
        setBucketId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileRecord value4(String value) {
        setFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileRecord value5(String value) {
        setMd5(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileRecord value6(String value) {
        setSha256(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileRecord values(String value1, Long value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileRecord
     */
    public FileRecord() {
        super(File.FILE);
    }

    /**
     * Create a detached, initialised FileRecord
     */
    public FileRecord(String id, Long reportId, String bucketId, String filename, String md5, String sha256) {
        super(File.FILE);

        set(0, id);
        set(1, reportId);
        set(2, bucketId);
        set(3, filename);
        set(4, md5);
        set(5, sha256);
    }
}
